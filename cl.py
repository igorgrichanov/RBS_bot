import telebot
from telebot import types


class Anwers:
    qmsg0 = ["Какой именно вопрос тебя интересует?"]

    qmsg1 = [[
                 "Если ты единственный учредитель компании и директор в одном лице, не планируешь вхождение в ООО новых участников, то, скорее всего, тебе будет достаточно типового устава.",
                 "Типовой устав — это уже разработанный и утвержденный Минэкономразвития учредительный документ, в котором уже есть все необходимые для деятельности юрлица сведения. Основное преимущество в том, что не нужно тратить время на составление и утверждение устава, его регистрацию в налоговом органе. В типовом уставе нет сведений о наименовании, месте нахождения и размере уставного капитала юрлица. Они указываются в ЕГРЮЛ.",
                 "У ФНС есть сервис для выбора типового устава\nhttps://service.nalog.ru/statute/?p=1210&utm_source=google&utm_medium=organic&utm_referer=www.google.com&utm_startpage=kontur.ru%2Farticles%2F2591&utm_orderpage=kontur.ru%2Farticles%2F2591",
                 "Но типовой устав подходит не всем ООО — например, тем, у которых число участников более 15 человек. Они должны создавать ревизионную комиссию и включать положения о ней в устав. Ограничиться типовым уставом не смогут ООО с советом директоров или правлением, действующим на основании положений, закрепленных в уставе."],
             [
                 "В рамках данного гранта я советую выбирать упрощённую систему налогообложения, но вот какую из двух - это уже вопрос.",
                 "УСН 6% на доходы.\nТут придётся платить налог за любую прибыль компании вне зависимости от затрат. По данной системе немного легче подготавливать отчётность, а также прогнозировать сумму выплат по налогам.",
                 "УСН Д-Р (15%).\nЭто уже немного сложнее, тут из всех доходов вычитаем расходы и от этой суммы берём 15%, что немного сложнее по расчётам и подготовке отчётности. Также стоит учитывать меняющуюся ставку в зависимости от региона, например в Московской, Ульяновской, Тульской и многих других областях ставка 15%, в Томской области, республике Саха и Калмыкия 10%, а в Ленинградской и Мурманской областях всего 5%.",
                 "Полный список регионов и ставок можно посмотреть тут\nhttps://e-kontur.ru/enquiry/276/check_usn#:~:text=%D0%A0%D0%B5%D0%B3%D0%B8%D0%BE%D0%BD%D1%8B%20%D0%B8%D0%BC%D0%B5%D1%8E%D1%82%20%D0%BF%D1%80%D0%B0%D0%B2%D0%BE%20%D0%BF%D1%80%D0%B8%D0%BD%D0%B8%D0%BC%D0%B0%D1%82%D1%8C%20%D1%81%D0%B2%D0%BE%D0%B8,%D0%BD%D0%B0%20%C2%AB%D0%94%D0%BE%D1%85%D0%BE%D0%B4%D0%B0%D1%85%20%D0%BC%D0%B8%D0%BD%D1%83%D1%81%20%D1%80%D0%B0%D1%81%D1%85%D0%BE%D0%B4%D0%B0%D1%85%C2%BB.&text=%D0%9F%D0%BE%D0%B2%D1%8B%D1%88%D0%B5%D0%BD%D0%BD%D1%8B%D0%B5%20%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B8%20%E2%80%94%208%25%20%D0%B8%2020,%D0%B8%D0%BB%D0%B8%20%D1%82%D1%80%D1%83%D0%B4%D0%BE%D1%83%D1%81%D1%82%D1%80%D0%BE%D0%B8%D0%BB%D0%B8%20100%E2%80%93130%20%D1%81%D0%BE%D1%82%D1%80%D1%83%D0%B4%D0%BD%D0%B8%D0%BA%D0%BE%D0%B2."],
             [
                 "ОКВЭД — это Общероссийский классификатор видов экономической деятельности, в котором все виды деятельности обозначены числовыми кодами.",
                 "В первую очередь определите основной вид деятельности — предполагается, что именно с него предприятие будет получать основной доход.\nГлавное — перед подачей заявления о регистрации предприятия убедиться, что коды взяты из правильной редакции кодификатора.\nhttps://www.regfile.ru/okved2.html",
                 "Работодатели обязаны выплачивать страховые взносы за сотрудников, а основной код ОКВЭД определяет размер выплат. Чем более травмоопасной и провоцирующей заболевания считается деятельность, тем выше тариф взносов. Важно, чтобы реальная основная деятельность соответствовала указанному коду, то есть чтобы именно с неё поступал основной доход.",
                 "Если вид деятельности изменится, необходимо будет сообщить об этом в налоговую. Если налоговая обнаружит несоответствие, работодателю установят самый высокий страховой тариф из возможных с учётом всех указанных кодов.\nТак же если основной ОКВЭД подразумевает обязательное лицензирование, необходимо будет проходить аккредитацию на получение лицензии.\nОт ОКВЭД зависит отчетность в контролирующие органы и Росстат.",
                 "На период работы с фондом можно установить ОКВЭД 72.19 – разработки в области естественных наук, а в дополнительные добавить ОКВЭД по Вашей разработке."],
             [
                 "Если в организации два и более учредителей, трудовой договор с директором ООО заключается в день регистрации ООО, информацию о трудоустройстве необходимо отправить в Социальный Фонд России не позднее следующего рабочего дня.",
                 "Если в организации единственный учредитель – руководитель, трудовой договор заключать не обязательно, но чтобы платить себе зарплату нужно трудоустроить себя в своей же организации.",
                 "Для подтверждения расходов на заработную плату в рамках гранта необходимо предоставить трудовой договор и приказ о приеме на работу.",
                 "Выплата заработной платы генеральному директору обязательна, так как контролирующие органы считают, что трудовые отношения начинаются с момента регистрации ООО, раз есть трудовые отношения – необходимо их оплачивать. В противном случае возможны доначисления, неустойки и штрафы."],
             [
                 "Согласно Федеральному законодательству и ТК РФ, на территории Российской Федерации установлен минимальный размер оплаты труда (МРОТ), он ежегодно индексируется с учетом инфляции. На 2023 год МРОТ составляет 16 242 рубля на 1 ставку, в регионах, где установлен районный коэффициент, МРОТ рассчитывается 16 242 + РК = МРОТ.",
                 "Можно трудоустроить сотрудника на не полную ставку, оклад будет рассчитываться пропорционально. Например, МРОТ на 0,5 ставки без РК составляет 8 121 рубль.\nРазмер ставки должен быть не меньше 0,1"],
             [
                 "Да, в этом случае, с сотрудником заключается трудовой договор по внешнему совместительству. Внесение записи в бумажную трудовую книжку, о трудоустройстве по внешнему совместительству, не обязательно. В случае если сотрудник хочет внести данную запись, ему необходимо выдать копию приказа о приеме на работу, обязательно заверенную генеральным директором ООО, в отделе кадров по основному месту работы внесут запись на основании данного приказа."],
             [
                 "Это индивидуальный номер вашей организации в Пенсионном фонде России или Фонде социального страхования. Он присваивается компании в момент постановки на учет в территориальном отделении фонда. Налоговая самостоятельно передает данные в эти Фонды, поэтому ехать туда для регистрации не нужно.\nПосмотреть его можно в выписке из ЕГРЮЛ"],
             [
                 "Выписка ЕГРЮЛ можно получить на сайте https://egrul.nalog.ru/index.html введя ИНН компании. В ней можно увидеть всю действующую информацию по юридическому лицу.\nЛист записи в ЕГРЮЛ, отправляется на электронную почту вместе со свидетельством о регистрации ООО, свидетельствует о том, что Ваша организация зарегистрирована и налоговый орган сделал запись в ЕГРЮЛ.\nДанные документы будут необходимы для составления отчетности фонду."],
             [
                 "Обязательность печати для обществ с ограниченной ответственностью и акционерных обществ - отменена Федеральным законом от 6 апреля 2015 года No 82-ФЗ «О внесении изменений в отдельные законодательные акты Российской Федерации в части отмены обязательности печати хозяйственных обществ», который вступил в силу 7 апреля 2015 года.",
                 "В связи с этим, если в Уставе не закреплено обязательное наличие печати ее можно не изготавливать, но в деловом документообороте принято заверять печатью подпись руководителя, в связи с чем часто возникают разногласия и отказы в приеме документов. Поэтому мы советуем все-таки изготовить печать. В типовых уставах утвержденных Минэкономразвития, не закреплено обязательное наличие печати."],
             [
                 "Квалифицированная электронная подпись нужна для того, чтобы придать документу юридическую значимость, то есть статус оригинала. Такой подписью подписывают налоговую отчетность, счета-фактуры, акты, накладные и иные документы.\nДля получения подписи необходимо обратится в налоговый орган, с паспортом, снилс и носителем Рутокен. Обратится можно в любой налоговый орган, без привязки по месту регистрации."],
             [
                 "Это можно сделать с банковской карты, а в назначении платежа нужно указать \"Внесение уставного капитала от единственного учредителя ФИО, в размере 100%\". Если несколько учредителей, то каждый вносит свою долю и прописывает в назначении свой % от уставного капитала"],
             ["Напиши мне свой вопрос и через некоторое время наши специалисты ответят на него"]]

    admin_msg = ["Пожалуйста, убедитесь, что пользователь, для которого нужно сгенерировать код, "
                 "отправил боту команду /start",
                 "Отправьте telegram id пользователя, для которого нужно сгенерировать код",
                 "Код для пользователя "]
    assistant_msg = ["Теперь вы являетесь бухгалтером!"]

    start_for_lead = ["Привет, для подключения к боту отправь мне свой код доступа.\n"
                      "Если у тебя нет кода, то можешь обратиться к менеджеру за ним ",
                      "Пожалуйста, обратись к менеджеру ",
                      " за кодом доступа",
                      "Проверь правильность введённого кода и попробуй ещё раз"]
    pavel_consultant_link = "https://t.me/Pavel_Consultant"

    start1 = ["Авторизация пройдена успешно, теперь я буду помогать тебе с ведением бухгалтерского учёта в твоей компании",
              "Я умею многое - давай проведу небольшой обзор на самого себя?"]

    start2 = [
        "Начну с того что я многое знаю, поэтому смогу проконсультировать тебя по любому вопросу связанному с бухгалтерским учётом или работой с фондом содействия инновациям. Для этого напиши команду /qv и выбери вопрос, который тебя интересует или задай свой",
        "Также я могу сделать любой документ, который тебе потребуется - ГПХ, договор для работы с самозанятым, на поставку/аренду оборудования и тд. Для этого введи команду /doc и выбери нужный тебе договор, а затем заполни форму, которую я тебе отправлю.\nЯ работаю не полностью автономно и за моими действиями наблюдают опытные бухгалтеры, поэтому перед тем как отправить тебе договор я согласую с ними правильность заполнения - из-за этого могу немного дольше его готовить.",
        "Также я буду вести твою компанию в системе 1С, а для этого мне нужно чтобы вся первичная бухгалтерская документация вовремя поступала ко мне на обработку.\nЕсли ты подписал договор/акт/соглашение, то как можно скорее отправляй его мне чтобы я успел внести всё в систему. Для этого пиши команду /1с и далее выбирай из списка что именно нужно загрузить и загружай.",
        "Это также относится ко всем платёжным поручениям, даже на маленькие суммы и даже за комиссии. Я должен отражать в бухгалтерской отчётности всю финансовую активность твоей компании.",
        "Без зарплаты никуда!\nПоэтому я буду два раза в месяц отправлять информацию по выплате заработной платы по зарплатному проекту и в них сразу будут все платежи по налогам за сотрудников.\nВыплачивать заработную плату нужно 15 числа и в последний день каждого месяца (если праздники или выходные, то числа немного смещаются), а я буду отправлять за день до выплаты файлы, которые нужно будет только загрузить в клиент банка и оплатить.\nЕсли ты хочешь устроить к себе на работу сотрудника или поменять что-то в заработной плате или условиям работы у текущих сотрудников, то пиши команду /zp",
        "Я буду автоматически сдавать все необходимые отчётности в налоговые органы и загружать отчёты в твою базу. Их всегда можно найти вызвав команду /my и выбрав пункт \"Отчёты в налоговые органы\"",
        "Помимо помощи с бухгалтерским учётом я могу помогать и по работе с Фондом содействия инновациям - для открытия меню помощи с фондом введи команду /fond.\nПеред тобой откроется список команд таких как:\n1) Генерация финансового отчёта - если ты подгружал всю первичную документацию по гранту, то я быстро составлю финансовый отчёт и подготовлю все необходимые документы для отчётности в фонде.\n2) Поиск куратора - часто бывает, что на сайте фонда устаревшие номера кураторов или их вообще нет, поэтому если тебе нужно что-то уточнить у куратора, то можешь написать мне и через некоторое время я предоставлю тебе развёрнутый ответ как от куратора фонда, так и от одного из наших экспертов.\n3) Технический отчёт - я отправлю тебе шаблон промежуточного или итогового технического отчёта чтобы было проще начинать его писать, а также расскажу как заполнять каждый из разделов.\n4) Консультация - если у тебя есть нестандартный вопрос, то ты можешь написать его мне и через некоторое время тебе напишет один из наших экспертов и проконсультирует по любой теме связанной с фондом.",
        "Все команды в любое время можно увидеть написав /help или нажав на меню.\nА на этом наше знакомство закончилось и можем переходить к работе!"]

    start3 = ["Для начала нам нужно познакомиться.",
              "Заполни информацию о своей компании"]

    start4 = ["Спасибо, теперь я тебя знаю чуть лучше.",
              "Как ты уже знаешь я буду сдавать все налоговые отчётности за тебя, но делать это без твоего согласия я не могу, поэтому у нас есть два варианта работы:\n1) Я буду формировать все отчёты и отправлять их тебе в нужное время, а ты будешь загружать их в налоговые сервисы и подписывать своей ЭЦП.\n2) Мы оформляем доверенность на твою ЭЦП чтобы я мог сдавать отчётности в налоговую и тогда тебе не придётся загружать и подписывать всё самостоятельно. По доверенности можно подписать отчётность только в налоговых органах, поэтому это безопасная практика."]

    start5end = [
        "А пока что попрошу загрузить документы, которые уже были тобой получены, например, устав организации (если не типовой), лист записи в ЕГРЮЛ, согласие об учреждении. Это можно сделать вызвав команду /1с и выбрав \"Документы при регистрации\"."]

    start6 = ["Хорошо, я буду отправлять отчётность за день до сдачи. Вот список отчётов, которые я буду делать:"]

    start7 = ["Хорошо, скоро с тобой свяжется бухгалтер и поможет оформить доверенность на ЭЦП."]

    help_m = [
        "Вот такие команды у меня есть:\n/документы - Сделаю любой договор для тебя\n/1с - Отправлю форму для загрузки документов\n/1с_Выгрузка - Отправлю выгрузку из 1С за весь период обслуживания\n/Сотрудники - Подготовлю документы для найма нового сотрудника или отредактирую условия для действующих\n/ФСИ - Помогу по любому вопросу связанному с Фондом содействия инновациям\n/Моя компания - Быстрый доступ ко всем документам компании\n/Вопросы - Отвечу на любой твой вопрос"]

    help_a = ["Вот такие команды у меня есть:\n/Сотрудники_б\n/ООО\n/Отчёты\n/Чат"]

    form1 = ["1) Название ООО",
             "2) Дата регистрации в формате ДД.ММ.ГГГГ",
             "3) ОГРН",
             "4) ИНН",
             "5) КПП",
             "6) Основной вид деятельности (ОКВЭД)",
             "7) Юридический адрес",
             "8) ФИО Директора",
             "9) Контактный телефон;",
             "10) e-mail;",
             "11) Номер расчётного счёта;",
             "12) Номер корреспондентского счёта;",
             "13) Банк",
             "14) БИК банка"]

    form1db = ["name",
               "date_r",
               "ogrn",
               "inn",
               "kpp",
               "activity",
               "adress",
               "name_director",
               "tel",
               "mail",
               "current_acc",
               "correspondent_acc",
               "bank",
               "bik_bank"]

    fsi1 = ["Что ты хочешь чтобы я сделал?", "Хорошо, я скоро отправлю тебе финансовый отчёт и нужные документы",
            "Ты хочешь получить письменную консультацию или напрямую поговорить с экспертом по работе с фондом?"]

    fsi2 = ["Напиши какой вопрос тебя интересует и и скоро эксперт по работе с фондом ответит тебе на него.",
            "Спасибо, я передал вопрос эксперту, скоро он ответит и я передам тебе."]

    fsi3 = [
        "Укажи удобное время для звонка и опиши в чём заключается вопрос чтобы эксперт подготовил нужную информацию",
        "Спасибо, в назначенное время свободный менеджер вам позвонит."]

    docs0 = ["Какой договор тебе нужен?"]

    docs1 = ["Я могу полностью сделать тебе договор или отправить шаблон?",
             "Договор должен составлять продавец, поэтому данный договор нужно делать только когда твоя ООО что-то продаёт, а когда покупаешь, то требуй договор от продавца.",
             "Для составления договора мне нужно знать следующую информацию о покупателе:",
             "Спасибо, я сделал договор, как свободный бухгалтер его проверит я сразу же отправлю его тебе"]

    docs2 = ["Для составления договора мне нужно знать следующую информацию:"]

    doc1form2 = ["1) ИНН;",
                 "2) Контактный телефон;",
                 "3) e-mail;",
                 "4) Номер расчётного счёта;",
                 "5) Номер корреспондентского счёта;",
                 "6) БИК банка;",
                 "7) Список товаров (Название, количество, цена за шт);",
                 "8) Дата заключения договора;",
                 "9) Дата поставки",
                 "10) Адрес поставки;"]

    doc2form3 = ["1) ФИО самозанятого;",
                 "2) Дата рождения;",
                 "3) Серия и номер паспорта;",
                 "4) Адрес регистрации;",
                 "5) Телефон;",
                 "6) ИНН;",
                 "7) Номер расчётного счёта;",
                 "8) Номер корреспондентского счёта;",
                 "9) БИК банка;",
                 "10) Список услуг (Тут нужно по пунктам подробно прописать, что именно должен сделать Исполнитель);",
                 "11) Дата заключения договора;",
                 "12) Срок оказания услуг в месяцах;",
                 "13) Стоимость оказываемых услуг;",
                 "14) Формат оплаты до выполнения работы, частями, после выполнения работы)."]

    doc3form4 = ["1) ФИО;",
                 "2) Дата рождения;",
                 "3) Серия и номер паспорта;",
                 "4) Адрес регистрации;",
                 "5) Телефон;",
                 "6) ИНН;",
                 "7) Номер расчётного счёта;",
                 "8) Номер корреспондентского счёта;",
                 "9) БИК банка;",
                 "10) Список услуг (Тут нужно по пунктам подробно прописать, что именно должен сделать Исполнитель);",
                 "11) Дата заключения договора;",
                 "12) Срок оказания услуг в месяцах;",
                 "13) Стоимость оказываемых услуг;",
                 "14) Формат оплаты до выполнения работы, частями, после выполнения работы)."]

    doc3form5 = ["1) ИНН;",
                 "2) Контактный телефон;",
                 "3) e-mail;",
                 "4) Номер расчётного счёта;",
                 "5) Номер корреспондентского счёта;",
                 "6) БИК банка;",
                 "7) Список услуг (Тут нужно по пунктам подробно прописать, что именно должен сделать Исполнитель);",
                 "8) Дата заключения договора;",
                 "9) Срок оказания услуг в месяцах;",
                 "10) Стоимость оказываемых услуг;",
                 "11) Формат оплаты до выполнения работы, частями, после выполнения работы)."]

    worksform6 = ["1) ФИО",
                  "2) Должность",
                  "3) Размер   ставки",
                  "4) место   работы(основное/совместительство)",
                  "5) оклад",
                  "6) дата   трудоустрйства",
                  "7) серия   и номер паспорта",
                  "8) кем   выдан паспорт",
                  "9) код подразделения",
                  "10) Адрес   регистрации",
                  "11) СНИЛС",
                  "12) ИНН",
                  "13) дата   рождения",
                  "14) трудовая   книжка электронная/ бумажная",
                  "15) Номер расчётного счёта;",
                  "16) Номер корреспондентского счёта;",
                  "17) БИК банка;"]

    worksform6db = ["name",
                    "jtitle",
                    "bet_size",
                    "jlocation",
                    "salary",
                    "date",
                    "passport_s_num",
                    "passport_who",
                    "division_code",
                    "adress",
                    "snils",
                    "inn",
                    "date_birth",
                    "employment_history",
                    "current_account",
                    "correspondent_account",
                    "bik_bank"]

    worksform7 = ["1) ФИО",
                  "2) серия   и номер паспорта",
                  "3) кем   выдан паспорт",
                  "4) код подразделения",
                  "5) Адрес   регистрации",
                  "6) СНИЛС",
                  "7) ИНН",
                  "8) Номер расчётного счёта;",
                  "9) Номер корреспондентского счёта;",
                  "10) БИК банка;"]

    works_db_form = ["name",
                     "passport_s_num",
                     "passport_who",
                     "division_code",
                     "adress",
                     "snils",
                     "inn",
                     "current_account",
                     "correspondent_account",
                     "bik_bank"]

    works1 = ["Что именно ты хочешь сделать?",
              "Заполни следующую форму и я составлю тебе трудовой договор и приказ приёма на работу",
              "Введи месячный оклад ты хочешь установить для этого сотрудника.\nПомни, что \"На руки \" сотрудник получит суммы с вычетом 13%",
              "Какую должность теперь занимает этот сотрудник и с какого числа?"]

    d_1c = ["Название документа должно соответствовать шаблону: Договор_аренды-предмет-номер_00",
            "Название документа должно соответствовать шаблону: Трудовой_договор-номер_00",
            "Название документа должно соответствовать шаблону: Договор_ГПХ-номер_00",
            "Название документа должно соответствовать шаблону: Договор_НПД-номер_00",
            "Название документа должно соответствовать шаблону: Договор_покупки_оборудования-номер_00",
            "Название платёжного поручения должно соответствовать: пп_по_договору-номер_00",
            "Название платёжного поручения должно соответствовать: пп_налоги-дата",
            "Сюда можно загрузить: устав организации, лист записи в ЕГРЮЛ, соглашение об учреждении."]

    req_acc = """Номер расчетного счета - {0}
Номер корреспондентского счета - {1}
БИК - {2}
Наименование банка - {3}
ИНН - {4}"""

    def my_org(self, org):
        answ = """Название ООО - {0}
Дата регистрации - {1}
ОГРН - {2}
ИНН - {3}
КПП - {4}
Основной вид деятельности (ОКВЭД) - {5}
Юридический адрес - {6}
ФИО Директора - {7}
Контактный телефон; - {8}
e-mail; - {9}
Номер расчётного счёта; - {10}
Номер корреспондентского счёта; - {11}
Банк - {12}
БИК банка - {13}""".format(org[0][5], org[0][6], org[0][7], org[0][8], org[0][9], org[0][10], org[0][11], org[0][12],
                           org[0][13], org[0][14], org[0][15], org[0][16], org[0][17], org[0][18])
        return answ

    def worker(self, worker):
        answ = """ФИО - {0}
Должность - {1}
Размер ставки - {2}
место работы - {3}
оклад - {4}
дата трудоустрйства - {5}
серия и номер паспорта - {6}
кем выдан паспорт - {7}
код подразделения - {8}
Адрес регистрации - {9}
СНИЛС - {10}
ИНН - {11}
дата рождения - {12}
трудовая книжка - {13}
Номер расчётного счёта - {14}
Номер корреспондентского счёта - {15}
БИК банка - {16}""".format(worker[0][5], worker[0][6], worker[0][7], worker[0][8], worker[0][9], worker[0][10],
                           worker[0][11], worker[0][12], worker[0][13], worker[0][14], worker[0][15], worker[0][16],
                           worker[0][17], worker[0][18], worker[0][19], worker[0][20], worker[0][21])
        return answ


class Menu:
    mainmenu = ["/Помощь"]

    admin_kb_1 = ["/Сгенерировать код"]
    admin_kb_2 = ["Пользователь зарегистрирован"]

    questmenu = ["Вернуться к вопросам", "/Помощь"]
    cancel = ["Отмена"]
    cancel2 = ["Отмена", "Пропустить"]
    start1 = ["Понятно, далее",
              "Классно, далее",
              "Понял, буду отправлять первичку вовремя",
              "Понял, далее",
              "Понятно",
              "Ага, хорошо"]

    start2 = ["К обзору!",
              "К работе!"]

    start3 = ["Я буду загружать сам",
              "Я хочу автоматизировать процесс"]

    start4 = ["Хорошо, буду загружать",
              "Я передумал, хочу автоматизировать процесс"]

    docs1 = ["Договор купли/продажи",
             "Договор для работы с самозанятыми",
             "Договoр ГПХ"]

    docs21 = ["Хoчу шаблон",
              "Хочу весь дoговор"]

    docs22 = ["Хочy шаблон",
              "Хочу весь догoвор"]

    docs23 = ["Хoчy шаблон",
              "Хочу весь договoр"]

    docs3 = ["Юр. лицо",
             "Физ. лицо"]

    d_1c = ["Договор аренды помещения",
            "Трудовой договор",
            "Договор ГПХ",
            "Договор НПД",
            "Договор покупки оборудования",
            "Платёжное поручение по договору",
            "Платёжное поручение по налогам",
            "Документы при регистрации"]

    works1 = ["Нанять нового сотрудника",
              "Изменить условия для сотрудника",
              "Уволить сотрудника"]

    works2 = ["Изменить оклад",
              "Изменить личные данные",
              "Изменить должность"]

    fsi1 = ["У меня есть вопрос по работе с фондом.",
            "Мне нужно составить финансовый отчёт"]

    fsi2 = ["Письменную",
            "Прямую консультацию"]

    my_company = ["Данные сотрудников",
                  "Реквизиты счёта",
                  "Данные о компании",
                  "Документооборот",
                  "Отчёты в налоговые органы"]

    qs = ["Как подобрать устав?",
          "Какую систему налогообложения выбрать?",
          "Как выбрать ОКВЭД?",
          "Нужно ли заключать трудовой договор с генеральным директором?",
          "Какой минимальный оклад можно установить для сотрудника?",
          "Можно трудоустроить сотрудника, если он уже работает в другой организации?",
          "Что такое регистрационный номер ПФР и ФСС?",
          "Что такое выписка ЕГРЮЛ и лист записи в ЕГРЮЛ?",
          "Нужна ли печать для ООО?",
          "Как получить ЭЦП на генерального директора?",
          "Как внести уставной капитал?",
          "У меня другой вопрос"]

    assist_org_inf = [["Реквизиты счёта", "req"],
                      ["Данные о компании", "dat"],
                      ["Документооборот", "doc"]]

    assist_works_inf = ["Посмотреть данные сoтрудника",
                        "Устроить нового сoтрудника",
                        "Уволить сoтрудника",
                        "Внести изменения в карточку сoтрудника"]

    works3 = [["Изменить оклад", "okl"],
              ["Изменить личные данные", "dat"],
              ["Изменить должность", "sta"]]

    nalogi_1 = [["ФНС", "FNS"],
                ["СФР", "SFR"],
                ["ФСС", "FSS"]]

    def markup(self, menu_list):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        for x in range(len(menu_list)):
            markup.add(types.KeyboardButton(menu_list[x]))
        return markup

    def inline(self, user_id):
        markup = types.InlineKeyboardMarkup(row_width=2)
        markup_inline_item1 = types.InlineKeyboardButton("Взять", callback_data='take=' + user_id)
        markup.add(markup_inline_item1)
        return markup

    def inline_list(self, inline_list, cname):
        markup = types.InlineKeyboardMarkup(row_width=2)
        for x in inline_list:
            # markup.add(types.InlineKeyboardButton(str(x[0]) + ") " + x[5], callback_data=cname + '=' + str(x[0])))
            markup.add(types.InlineKeyboardButton(x[5], callback_data=cname + '=' + str(x[0])))
        return markup

    def inline_list2(self, inline_list, cname):
        markup = types.InlineKeyboardMarkup(row_width=2)
        for x in inline_list:
            markup.add(types.InlineKeyboardButton(x[0], callback_data=cname + '=' + str(x[1])))
        return markup

    def inline_list3(self, inline_list, cname):
        markup = types.InlineKeyboardMarkup(row_width=2)
        for x in inline_list:
            if str(type(x[5])) != "<class 'NoneType'>":
                markup.add(types.InlineKeyboardButton(str(x[0]) + ") " + x[5], callback_data=cname + '=' + str(x[1])))
        return markup
